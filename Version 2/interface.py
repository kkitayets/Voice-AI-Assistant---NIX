import sys
import cv2
import numpy as np
from PyQt5.QtWidgets import (QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, QLabel, QScrollArea, QFrame, QSplitter, QPushButton, QTextEdit, QMessageBox)
from PyQt5.QtGui import (QPainter, QColor, QFont, QPixmap, QImage,QLinearGradient, QPen, QBrush)
from PyQt5.QtCore import (Qt, QTimer, QThread, pyqtSignal, QSize)
import logging
from datetime import datetime
import threading
from main import (get_last_user_input, get_last_ai_response,get_conversation_history, is_running,process_user_input, vision_processor)

logging.basicConfig(level=logging.INFO)
class CameraWidget(QLabel):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∏–¥–µ–æ —Å –∫–∞–º–µ—Ä—ã"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setMinimumSize(480, 360)
        self.setMaximumSize(640, 480)
        self.setStyleSheet("""
            QLabel {
                background-color: #1a1a1a;
                border: 2px solid #00d4aa;
                border-radius: 15px;
                padding: 5px;
            }
        """)
        self.setAlignment(Qt.AlignCenter)
        self.setText("–ö–∞–º–µ—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...")
        self.setWordWrap(True)

        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_camera)
        self.timer.start(50)

    def update_camera(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∫–∞–º–µ—Ä—ã"""
        try:
            from main import vision_processor
            frame = vision_processor.get_current_frame()

            if frame is not None:
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º BGR –≤ RGB
                rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

                # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤–∏–¥–∂–µ—Ç–∞
                widget_width = self.width()
                widget_height = self.height()

                # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                h, w, ch = rgb_frame.shape
                bytes_per_line = ch * w
                q_img = QImage(rgb_frame.data, w, h, bytes_per_line, QImage.Format_RGB888)
                pixmap = QPixmap.fromImage(q_img)

                # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–π
                scaled_pixmap = pixmap.scaled(
                    widget_width, widget_height,
                    Qt.KeepAspectRatio,
                    Qt.SmoothTransformation
                )

                self.setPixmap(scaled_pixmap)
            else:
                self.setText("–û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ —Å –∫–∞–º–µ—Ä—ã...")

        except Exception as e:
            logging.error(f"Camera widget error: {e}")
            self.setText("–û—à–∏–±–∫–∞ –∫–∞–º–µ—Ä—ã")


class ChatMessage(QFrame):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ"""

    def __init__(self, message, is_user=True, timestamp=None, parent=None):
        super().__init__(parent)
        self.setMaximumWidth(600)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        if is_user:
            self.setStyleSheet("""
                QFrame {
                    background-color: rgba(0, 123, 255, 30);
                    border: 1px solid rgba(0, 123, 255, 50);
                    border-radius: 15px;
                    padding: 10px;
                    margin: 5px;
                }
            """)
        else:
            self.setStyleSheet("""
                QFrame {
                    background-color: rgba(0, 212, 170, 30);
                    border: 1px solid rgba(0, 212, 170, 50);
                    border-radius: 15px;
                    padding: 10px;
                    margin: 5px;
                }
            """)

        layout = QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
        header = QLabel("üë§ –í—ã:" if is_user else "ü§ñ –í–ò–ñ–ù:")
        header.setStyleSheet("""
            QLabel {
                color: #00d4aa;
                font-weight: bold;
                font-size: 12px;
                margin-bottom: 5px;
                background: transparent;
                border: none;
                padding: 0;
            }
        """)

        # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        text_label = QLabel(message)
        text_label.setWordWrap(True)
        text_label.setStyleSheet("""
            QLabel {
                color: white;
                font-size: 14px;
                line-height: 1.4;
                background: transparent;
                border: none;
                padding: 0;
            }
        """)

        # –í—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è
        if timestamp:
            try:
                dt = datetime.fromisoformat(timestamp)
                time_str = dt.strftime("%H:%M:%S")
            except:
                time_str = datetime.now().strftime("%H:%M:%S")
        else:
            time_str = datetime.now().strftime("%H:%M:%S")

        time_label = QLabel(time_str)
        time_label.setStyleSheet("""
            QLabel {
                color: rgba(255, 255, 255, 100);
                font-size: 10px;
                background: transparent;
                border: none;
                padding: 0;
                margin-top: 5px;
            }
        """)
        time_label.setAlignment(Qt.AlignRight)

        layout.addWidget(header)
        layout.addWidget(text_label)
        layout.addWidget(time_label)

        self.setLayout(layout)


class ChatWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç —á–∞—Ç–∞"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.messages = []
        self.last_conversation_length = 0

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
        header = QLabel("üí¨ –î–∏–∞–ª–æ–≥ —Å —Ä–æ–±–æ—Ç–æ–º –í–ò–ñ–ù")
        header.setStyleSheet("""
            QLabel {
                color: #00d4aa;
                font-size: 18px;
                font-weight: bold;
                padding: 10px;
                background: rgba(0, 212, 170, 20);
                border-radius: 10px;
                margin-bottom: 10px;
            }
        """)
        header.setAlignment(Qt.AlignCenter)

        layout.addWidget(header)

        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
        self.scroll_area = QScrollArea()
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setStyleSheet("""
            QScrollArea {
                border: none;
                background: transparent;
            }
            QScrollBar:vertical {
                background: rgba(255, 255, 255, 20);
                width: 8px;
                border-radius: 4px;
            }
            QScrollBar::handle:vertical {
                background: rgba(0, 212, 170, 100);
                border-radius: 4px;
            }
        """)

        # –í–∏–¥–∂–µ—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
        self.messages_widget = QWidget()
        self.messages_layout = QVBoxLayout(self.messages_widget)
        self.messages_layout.setSpacing(5)
        self.messages_layout.addStretch()

        self.scroll_area.setWidget(self.messages_widget)
        layout.addWidget(self.scroll_area)

        # –ü–∞–Ω–µ–ª—å –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
        input_layout = QHBoxLayout()

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
        self.text_input = QTextEdit()
        self.text_input.setMaximumHeight(80)
        self.text_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –í–ò–ñ–ù...")
        self.text_input.setStyleSheet("""
            QTextEdit {
                background: rgba(40, 45, 55, 150);
                border: 2px solid rgba(0, 212, 170, 50);
                border-radius: 10px;
                padding: 10px;
                color: white;
                font-size: 14px;
            }
            QTextEdit:focus {
                border: 2px solid #00d4aa;
            }
        """)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter
        self.text_input.keyPressEvent = self.handle_key_press

        self.send_button = QPushButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")
        self.send_button.setStyleSheet("""
            QPushButton {
                background: rgba(0, 212, 170, 100);
                border: none;
                border-radius: 10px;
                padding: 15px 25px;
                color: white;
                font-weight: bold;
                font-size: 14px;
            }
            QPushButton:hover {
                background: rgba(0, 212, 170, 150);
            }
            QPushButton:pressed {
                background: rgba(0, 212, 170, 200);
            }
        """)
        self.send_button.clicked.connect(self.send_message)

        input_layout.addWidget(self.text_input)
        input_layout.addWidget(self.send_button)

        layout.addLayout(input_layout)

        # –°—Ç–∞—Ç—É—Å
        self.status_label = QLabel("–û–∂–∏–¥–∞—é –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")
        self.status_label.setStyleSheet("""
            QLabel {
                color: rgba(255, 255, 255, 150);
                font-size: 12px;
                font-style: italic;
                padding: 5px;
                background: rgba(0, 0, 0, 50);
                border-radius: 5px;
            }
        """)
        layout.addWidget(self.status_label)

        self.setLayout(layout)

        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_chat)
        self.timer.start(500)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥—ã

    def handle_key_press(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à"""
        if event.key() == Qt.Key_Return and not event.modifiers():
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter –±–µ–∑ Shift
            self.send_message()
            event.accept()
        elif event.key() == Qt.Key_Return and event.modifiers() == Qt.ShiftModifier:
            # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –ø—Ä–∏ Shift+Enter
            self.text_input.insertPlainText("\n")
            event.accept()
        else:
            # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
            super().keyPressEvent(event)

    def send_message(self):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        text = self.text_input.toPlainText().strip()
        if text:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            threading.Thread(target=self.process_message, args=(text,), daemon=True).start()
            self.text_input.clear()

    def process_message(self, text):
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        try:
            process_user_input(text)
        except Exception as e:
            logging.error(f"Message processing error: {e}")

    def add_message(self, message, is_user=True, timestamp=None):
        """–î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç"""
        chat_message = ChatMessage(message, is_user, timestamp)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ stretch
        self.messages_layout.insertWidget(self.messages_layout.count() - 1, chat_message)

        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑
        QTimer.singleShot(100, self.scroll_to_bottom)

    def scroll_to_bottom(self):
        """–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —á–∞—Ç –≤–Ω–∏–∑"""
        scrollbar = self.scroll_area.verticalScrollBar()
        scrollbar.setValue(scrollbar.maximum())

    def update_chat(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞"""
        try:
            conversation = get_conversation_history()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if len(conversation) > self.last_conversation_length:
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                for msg in conversation[self.last_conversation_length:]:
                    is_user = msg['role'] == 'user'
                    timestamp = msg.get('timestamp')
                    self.add_message(msg['content'], is_user, timestamp)

                self.last_conversation_length = len(conversation)

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            if is_running():
                last_user = get_last_user_input()
                last_ai = get_last_ai_response()

                if last_user:
                    self.status_label.setText("üé§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")
                elif last_ai:
                    self.status_label.setText("ü§ñ –û—Ç–≤–µ—á–∞—é...")
                else:
                    self.status_label.setText("üí§ –û–∂–∏–¥–∞—é...")
            else:
                self.status_label.setText("‚ùå –ù–µ –∞–∫—Ç–∏–≤–µ–Ω")

        except Exception as e:
            logging.error(f"Chat update error: {e}")


class StatusWidget(QWidget):
    """–í–∏–¥–∂–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.setFixedHeight(120)
        self.setStyleSheet("""
            QWidget {
                background: rgba(20, 25, 35, 200);
                border: 1px solid rgba(0, 212, 170, 50);
                border-radius: 15px;
                padding: 10px;
            }
        """)

        layout = QVBoxLayout()

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("üîç –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –í–ò–ñ–ù")
        title.setStyleSheet("""
            QLabel {
                color: #00d4aa;
                font-size: 16px;
                font-weight: bold;
                margin-bottom: 10px;
            }
        """)
        title.setAlignment(Qt.AlignCenter)

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å—Ç–∞—Ç—É—Å–∞
        self.camera_status = QLabel("üìπ –ö–∞–º–µ—Ä–∞: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è")
        self.ai_status = QLabel("üß† –ò–ò: –ì–æ—Ç–æ–≤")
        self.speech_status = QLabel("üé§ –†–µ—á—å: –û–∂–∏–¥–∞–Ω–∏–µ")

        status_style = """
            QLabel {
                color: white;
                font-size: 12px;
                padding: 2px 5px;
                background: rgba(0, 0, 0, 30);
                border-radius: 5px;
                margin: 2px;
            }
        """

        self.camera_status.setStyleSheet(status_style)
        self.ai_status.setStyleSheet(status_style)
        self.speech_status.setStyleSheet(status_style)

        layout.addWidget(title)
        layout.addWidget(self.camera_status)
        layout.addWidget(self.ai_status)
        layout.addWidget(self.speech_status)

        self.setLayout(layout)

        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_status)
        self.timer.start(1000)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

    def update_status(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"""
        try:
            # –°—Ç–∞—Ç—É—Å –∫–∞–º–µ—Ä—ã
            if vision_processor.running and vision_processor.get_current_frame() is not None:
                self.camera_status.setText("üìπ –ö–∞–º–µ—Ä–∞: ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞")
            else:
                self.camera_status.setText("üìπ –ö–∞–º–µ—Ä–∞: ‚ùå –ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞")

            # –°—Ç–∞—Ç—É—Å –ò–ò
            if is_running():
                self.ai_status.setText("üß† –ò–ò: ‚úÖ –ì–æ—Ç–æ–≤")
            else:
                self.ai_status.setText("üß† –ò–ò: ‚ùå –ù–µ –∞–∫—Ç–∏–≤–µ–Ω")

            # –°—Ç–∞—Ç—É—Å —Ä–µ—á–∏
            last_input = get_last_user_input()
            if last_input:
                self.speech_status.setText(f"üé§ –†–µ—á—å: üìù {last_input[:30]}...")
            else:
                self.speech_status.setText("üé§ –†–µ—á—å: üëÇ –°–ª—É—à–∞—é...")

        except Exception as e:
            logging.error(f"Status update error: {e}")


class MainWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

    def __init__(self):
        super().__init__()
        self.setWindowTitle("VISION Robot Interface")
        self.setGeometry(100, 100, 1400, 900)

        # –û—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        # –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
        self.setStyleSheet("""
            QMainWindow {
                background: qlineargradient(x1:0, y1:0, x2:0, y2:1, 
                    stop:0 #0f1419, stop:0.5 #1a1f29, stop:1 #0a0f14);
            }
            QWidget {
                background: transparent;
                color: white;
            }
        """)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QHBoxLayout(central_widget)
        main_layout.setSpacing(20)
        main_layout.setContentsMargins(20, 20, 20, 20)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (–∫–∞–º–µ—Ä–∞ –∏ —Å—Ç–∞—Ç—É—Å)
        left_panel = QWidget()
        left_layout = QVBoxLayout(left_panel)
        left_layout.setSpacing(15)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–º–µ—Ä—ã
        camera_title = QLabel("üìπ –ö–∞–º–µ—Ä–∞ —Ä–æ–±–æ—Ç–∞ –í–ò–ñ–ù")
        camera_title.setStyleSheet("""
            QLabel {
                color: #00d4aa;
                font-size: 20px;
                font-weight: bold;
                padding: 10px;
                background: rgba(0, 212, 170, 20);
                border-radius: 10px;
                margin-bottom: 10px;
            }
        """)
        camera_title.setAlignment(Qt.AlignCenter)

        # –ö–∞–º–µ—Ä–∞
        self.camera_widget = CameraWidget()

        # –°—Ç–∞—Ç—É—Å
        self.status_widget = StatusWidget()

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_layout = QHBoxLayout()

        self.emergency_button = QPushButton("üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞")
        self.emergency_button.setStyleSheet("""
            QPushButton {
                background: rgba(255, 50, 50, 100);
                border: none;
                border-radius: 10px;
                padding: 10px;
                color: white;
                font-weight: bold;
                font-size: 12px;
            }
            QPushButton:hover {
                background: rgba(255, 50, 50, 150);
            }
        """)
        self.emergency_button.clicked.connect(self.emergency_stop)

        self.info_button = QPushButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        self.info_button.setStyleSheet("""
            QPushButton {
                background: rgba(100, 100, 100, 100);
                border: none;
                border-radius: 10px;
                padding: 10px;
                color: white;
                font-weight: bold;
                font-size: 12px;
            }
            QPushButton:hover {
                background: rgba(100, 100, 100, 150);
            }
        """)
        self.info_button.clicked.connect(self.show_info)

        control_layout.addWidget(self.emergency_button)
        control_layout.addWidget(self.info_button)

        left_layout.addWidget(camera_title)
        left_layout.addWidget(self.camera_widget)
        left_layout.addWidget(self.status_widget)
        left_layout.addLayout(control_layout)
        left_layout.addStretch()

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (—á–∞—Ç)
        self.chat_widget = ChatWidget()

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout.addWidget(left_panel, 1)
        main_layout.addWidget(self.chat_widget, 2)

    def emergency_stop(self):
        """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"""
        reply = QMessageBox.question(self, '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞',
                                     '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–±–æ—Ç–∞ –í–ò–ñ–ù?',
                                     QMessageBox.Yes | QMessageBox.No,
                                     QMessageBox.No)

        if reply == QMessageBox.Yes:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
            QApplication.quit()

    def show_info(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–±–æ—Ç–µ"""
        info_text = """
        ü§ñ –†–æ–±–æ—Ç –í–ò–ñ–ù v1.0

        –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
        ‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
        ‚Ä¢ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ (YOLO)
        ‚Ä¢ –î–∏–∞–ª–æ–≥ —Å –ò–ò (DeepSeek v3)
        ‚Ä¢ –ü—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã
        ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã

        –ö–æ–º–∞–Ω–¥—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:
        ‚Ä¢ "–ü—Ä–∏–≤–µ—Ç –í–ò–ñ–ù" - –∞–∫—Ç–∏–≤–∞—Ü–∏—è
        ‚Ä¢ "–ß—Ç–æ —Ç—ã –≤–∏–¥–∏—à—å?" - –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        ‚Ä¢ "–ü–æ–∫–∞" - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã

        –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –ò–ò.
        """

        QMessageBox.information(self, '–û —Ä–æ–±–æ—Ç–µ –í–ò–ñ–ù', info_text)

    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        reply = QMessageBox.question(self, '–ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
                                     '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å?',
                                     QMessageBox.Yes | QMessageBox.No,
                                     QMessageBox.No)

        if reply == QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    app = QApplication(sys.argv)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
    app.setApplicationName("VISION Robot Interface")
    app.setApplicationVersion("1.0")

    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    window = MainWindow()
    window.show()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()

